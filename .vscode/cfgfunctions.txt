
class F
{

class aceActions
{
    file = "components\aceActions";
    class addHeliMusic{};
    class addInventoryActionToClass{};
    class addSquadManagerActionsToClass{};
    class addPushActionToClass{};
    class addUnflipActionToClass{};
    class addViewDistanceActionToClass{};
    class unflipVehicle{};
    class pushVehicle{};
    class playerPushVehicle{};
};

class aiBehaviour
{
    file = "components\aiBehaviour";
    class fireWeaponSafe{};
    class groupGuerrillaAI{};
    class groupSuppressiveAI{};
    class unitGuerrillaAI{};
    class unitSuppressiveAI{};
    class unitStartSeated{};
    class veryImportantPrisoner{};
    class disableAdvancedAI{};
    class makeSentryGroup{};
};

class aiCache
{
    file = "components\aiCache";
    class cacheGroup{};
    class doAiCacheIteration{};
    class excludePlayerGroupsFromCache{};
    class nearPlayerCluster{};
    class uncacheGroup{};
    class updatePlayerClusters{};
    class displayClusters{};
    class doCivPopCacheIteration{};
    class mainAiCachingLoop{};
    class uncacheAllCachedGroups{};
    class uncacheGroupsWhenAiCachingDisabled{};
    class maintainAiCachingAnchorsArray{};
    class applyCachingAnchorVisibility{};
    class createAiCachingAnchor{};
};
class aiCache_zen
{
    file = "components\aiCache\zen";
    class zen_createAiCachingAnchor{};
};

class aiDriver
{
    file = "components\aiDriver";
    class activateAiDriver{};
    class deactivateAiDriver{};
    class addAiDriverActions{};
    class designateEffectiveCommander{};
};

class briefing
{
    file = "components\briefing";
    class briefing{};
};

class ceasefire
{
    file = "components\ceasefire";
    class ceasefire{};
    class client_ceasefire{};
    class client_ceasefireUI{};
    class zen_ceasefire{};
};

class downtime
{
    file = "components\downtime";
    class downtimeMonitor{};
    class downtimeSpectate{};
    class blockSelfInteractWhileUnconscious{};
    class blockUnconsciousEffectsWhileDowntimeActive{};
    class updateDowntimeSpectatorCameraModes{};
};

class endings
{
    file = "components\endings";
    class broadcastEnding{};
    class performEnding{};
};

class ftMemberMarkers
{
    file = "components\ftMemberMarkers";
    class createFireteamMarkerHook{};
    class drawFireteamMarkers{};
};

class gearScript
{
    file = "components\gearScript";
    class addInsigniaMonitor{};
    class addItemToLoadoutContainer{};
    class addLinkedItemToLoadout{};
    class applyLoadout{};
    class applyGunbag{};
    class applyLoadoutModifications{};
    class assignGear{};
    class createLoadoutLocker{};
    class removeItemFromLoadout{};
    class removeLinkedItemFromLoadout{};
};

class gearScriptCrates
{
    file = "components\gearScript\crateSupport";
    class addRifleToCrate{};
    class addRifleAmmoToCrate{};
    class addRifleGrenadesToCrate{};
    class addPistolToCrate{};
    class addPistolAmmoToCrate{};
    class addLauncherToCrate{};
    class addLauncherAmmoToCrate{};
    class addBandagesToCrate{};
    class addBackpacksToCrate{};
    class addItemsToCrate{};
    class addMedsToCrate{};
    class addBloodToCrate{};
    class applyCrateModifications{};
    class addSplintsToCrate{};
};

class gearScriptRadios
{
    file = "components\gearScript\radioSupport";
    class removeRadioFromItems{};
    class searchAndDestroyRadios{};
};

class gearScript_zen
{
    file = "components\gearScript\zen";
    class zen_createLoadoutLocker{};
    class zen_createSupplyCrate{};
    class zen_createSupplyCrate_followUpDialog{};
    class zen_createSupplyCrate_performAction{};
};

class gearScript_gunbag
{
    file = "components\gearScript\gunbag";
    class getWeaponStateFromClassName{};
    class setGunbagVariableFromArsenalExport{};
    class setGunbagVariableState{};
};

class gravestones
{
    file = "components\gravestones";
    class addActionToGravestone{};
    class addToGravestoneManager{};
    class allowGravestone{};
    class createGravestoneAndDeleteCorpse{};
    class fillGraveAndDeleteCorpse{};
    class getObituary{};
    class initGravestoneManager{};
    class readGravestone{};
    class deleteGravestone{};
    class sendGravestoneToClients{};
    class sendUnitToGravestoneCache{};
};

class identity
{
    file = "components\identity";
    class applyExistingUnitIdentities{};
    class applyFactionIdentity{};
    class applyIdentity{};
    class generateName{};
};

class groupPickerDialog
{
    file = "components\joinInProgress\ui_functions";
    class groupPickerDialog_onCloseDialog{};
    class groupPickerDialog_populateDialog{};
};

class killTracker
{
    file = "components\killTracker";
    class appendKillReport{};
    class trackKilledEvent{};
    class trackKilledStaticEvent{};
    class trackStaticKillsInAO{};
    class transmitKillsToRecipients{};
    class transmitLogDiff{};
    class updateKillLog{};
};
class killTrackerEden
{
    file = "components\killTracker\eden";
    class edenClearKillLogDisplay{};
    class edenCreateLineDrawer{};
    class edenDeleteKillLogs{};
    class edenListKillLogs{};
    class edenShowKillLog{};
};

class logiVehicle
{
    file = "components\logiVehicle";
    class addLogiSpawnActions{};
    class createLogiSpawnAction{};
    class canLogiSpawnVehicle{};
    class canPlayerUseLogi{};
    class logiDoSpawnVehicle{};
    class setLogiVehicle{};
    class setLogiVehiclePlayer{};
    class tryLogiSpawnProcedure{};
};
class logiVehicle_zen
{
    file = "components\logiVehicle";
	class zen_makeLogiVehicle{};
};

class lootBox
{
    file = "components\lootBox";
    class assignLoot{};
    class applyLoot{};
    class lootboxVisitList{};
    class lootboxVisitGroup{};
    class lootboxVisitItem{};
    class lootboxVisitItems{};
    class lootboxVisitUnknown{};
    class lootboxRollQuantity{};
};

class mapClick
{
    file = "components\mapClick";
    class mapClickSupplyDropAction{};
    class mapClickSupplyDropUnit{};
    class mapClickTeleportAction{};
    class mapClickTeleportGroup{};
    class mapClickTeleportUnit{};
};

class miscClient
{
    file = "components\miscClient";
    class sitautionInfoIntro{};
    class tilesMissionIntro{};
    class paradropUnit{};
    class setRating{};
    class say3D{};
    class removeRadios{};
    class generateRadioList{};
    class onlyRadioTalkers{};
};
class miscClient_ui
{
    file = "components\miscClient\ui_functions";
    class subtitleText_onLoad{};
    class createSubtitleText{};
};
class miscClient_zen
{
    file = "components\miscClient\zen";
    class zen_playIntro{};
	class zen_woundUnitRandomly{};
	class zen_woundUnitRandomlyAdvanced{};
	class zen_woundGroupRandomly{};
    class zen_woundGroupRandomlyAdvanced{};
    class zen_createJammer{};
	class zen_removeJammers{};
    class zen_immersiveRevive{};
    class zen_healWounds{};
	class zen_fixOverdose{};
    class zen_toggleAIPath{};
};

class miscShared
{
    file = "components\miscShared";
    class getDirPos{};
    class teleportPlayer{};
    class tryMoveIntoVehicle{};
    class isKindOfAny{};
    class insertLoadoutIntoCrate{};
    class addWeaponToCrate{};
    class isContainer{};
    class sideToString{};
    class ignoreZeus{};
    class makeExplosion{};
    class makeExplosiveBig{};
    class attachKeepOrient{};
    class activatePlayer{};
    class radioAlarm{};
	class giveUnitGodmode{};
    class applyInsignia{};
    class formatTimeDuration{};
    class tryRunOnHeadlessClient{};
    class monitorHeadlessClients{};
    class factionToSideName{};
    class reapplyInsigniaLocal{};
    class getObjectUid{};
    class addObjectsToAllZeuses{};
    class addCustomSettings{};
    class runHCAware{};
    class edenScaleSupport{};
    class inGameScaleSupport{};
    class getAllObjectVariablesInNamespace{};
    class getUnitConfiguredSide{};
    class woundUnitRandomly{};
    class addJammerToObject{};
    class removeJammersFromObject{};
    class immersiveRevive{};
    class healWounds{};
    class fixOverdose{};
    class toggleAIPath{};
    class keepUnitHealthy{};
};

class radios
{
    file = "components\radios";
    class clientRadioInit{};
    class clientSetLanguages{};
    class clientSetRadioPresets{};
    class copyGroupRadioChannelsToUnit{};
    class giveRadioAction{};
    class giveSideRadio{};
    class performClientRadioInit{};
    class radioGroupChangeLoop{};
    class setupGroupRadioChannels{};
    class setupRadioChannels{};
    class setupRadioPresets{};
    class tryGiveBackpackRadio{};
    class tryGiveExtraLongRangeRadio{};
    class tryGiveLongRangeRadio{};
    class tryGiveShortRangeRadio{};
    class updateGroupRadioChannels{};
};

class respawn
{
    file = "components\respawn";
    class addFreeTicket{};
    class getPlayerRespawnDelay{};
    class isRespawnModeActive{};
    class respawnSpectatorTweaks{};
};
class respawn_locationSystem
{
    file = "components\respawn";
    class addToRespawnPollers{};
    class getManagedRespawn{};
    class getRespawnKey{};
    class removeManagedRespawn{};
    class respawnManagerLoop{};
    class setRespawnLocation{};
    class updateManagedSpawnpoint{};
};
class respawn_triggeredWave
{
    file = "components\respawn\triggeredWave";
    class canTriggerRespawnWave{};
    class getRespawnTimestampForTarget{};
    class getSideRespawnDelayForTarget{};
    class triggerRespawnWave{};
    class tryTriggerRespawnWave{};
};
class respawn_triggeredWave_ui
{
    file = "components\respawn\triggeredWave\ui_functions";
    class triggeredWaveDialog_populateDialog{};
};
class respawn_redeployment
{
    file = "components\respawn";
    class createRedeployObject{};
    class doRedeployAction{};
};
class respawn_zen
{
    file = "components\respawn\zen";
    class allowImmediateRespawnLocal{};
    class zen_allowImmediateRespawn{};
    class zen_createRespawnPoint{};
    class zen_changeTickets{};
};

class spawnNpcs
{
    file = "components\spawnNpcs";
    class spawnAttack{};
    class spawnCharge{};
    class spawnFortify{};
    class spawnGarrison{};
    class spawnGroup{};
    class spawnPatrol{};
    class spawnVehicle{};
    class spawnVehicleAttack{};
    class spawnVehicleGroup{};
    class spawnVehiclePatrol{};
    class spawnVehicleStatic{};
    class massAttack{};
    class massCharge{};
    class massFortify{};
    class massPatrol{};
    class massVehicleAttack{};
    class massVehiclePatrol{};
    class massVehicleStatic{};
};

class squadMarkers
{
    file = "components\squadMarkers";
    class beginSquadMarkers{};
    class createSquadMarkerHook{};
    class drawSquadMarkers{};
    class getGroupMarker{};
    class initSquadMarkerManager{};
    class addGroupMemberMarkers{};
    class maintainImportantSquad{};
    class squadMarkerArtilleryComputerManager{};
};
class squadMarkersDialog
{
    file = "components\squadMarkers\ui_functions";
    class squadMarkerDialog_addSpecialist{};
    class squadMarkerDialog_alterSquadMarker{};
    class squadMarkerDialog_onCloseDialog{};
    class squadMarkerDialog_populateDialog{};
    class squadMarkerDialog_removeSpecialist{};
};

class viewDistanceEditor
{
    file = "components\viewDistanceEditor\ui_functions";
    class viewDistanceEditor_onCloseDialog{};
    class viewDistanceEditor_populateDialog{};
};

class zeusui
{
	file = "components\zeus_ui";
	class compileLists{postInit = 1;};
	class server_spawnGroup{};
	class zeusUI{};
	class addToCurator{};
	class addZeusActions{};
	class exitZeus{};
	class openZeus{};
	class endingDialog{};
};



}

class BIS
{
	class overrides
	{
		file = "components\miscShared";
		class moduleCivilianPresence{};
	};
};

class ace_medical_feedback
{
	class overrides
	{
		file = "components\downtime";
		class effectUnconscious{};
	};
};


class ace_medical_status
{
	class overrides
	{
		file = "components\medical";
		class isInStableCondition{};
	}
};

class ace_gunbag
{
	class overrides
	{
		file = "components\gearscript\gunbag";
		class hasGunbag{};
	};
};


	class CAFEConfig
	{
		class PreInit
		{
			class startup_preInit
			{
				file = "startup\startup_preInit.sqf";
				preInit = 1;
			};
		};
	};